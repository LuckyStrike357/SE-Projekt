{"version":3,"sources":["images/swimmer.jpg","images/papers.jpg","images/logo.svg","history.js","pages/StartPage.js","pages/CanclePage.js","pages/FindSlotPage.js","pages/DataFormPage.js","pages/BookingCodePage.js","pages/HomePage.js","pages/About.js","pages/admin/AdminLogIn.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","StartPage","class","CardDeck","Card","Img","variant","src","swimmer","Body","Title","Text","Button","onClick","push","paper","CanclePage","Fragment","FindSlortPage","state","date","Date","booking","timeslots","Array","bookings","onChange","setState","console","log","fetchBookings","fetchTimeslots","a","fetch","result","json","body","onClickNext","pathname","data","renderTableData","map","timeslot","index","id","start","end","capacity","undefined","key","className","this","value","toLocaleDateString","Table","striped","bordered","hover","Component","DataFormPage","bookingCode","String","dataPrivacyChecked","Boolean","check","bookSlot","document","getElementById","checked","alert","Form","Row","Group","as","Col","controlId","Control","type","placeholder","Check","label","Label","visible","size","BookingCodePage","HomePage","AboutPage","match","params","listItems","useEffect","info","name","fetchData","AdminLogIn","Routes","path","exact","component","FindSlotPage","App","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.102195ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swimmer.c66c39a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/papers.d803ade2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, { Component } from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\n\r\nimport history from './../history';\r\nimport logo from './../images/logo.svg';\r\nimport swimmer from './../images/swimmer.jpg';\r\nimport paper from './../images/papers.jpg';\r\n\r\n\r\nconst StartPage = () => (\r\n\r\n  <div class=\"CardDeckComponent\">\r\n    <div class=\"Header\">\r\n      Willkommen!\r\n    </div>\r\n    <div class=\"SubHeader\">\r\n      Bitte wählen Sie eine Option, mit der Sie fortfahren möchten\r\n    </div>\r\n    <hr class=\"solid\"></hr>\r\n\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src={swimmer} />\r\n          <Card.Body>\r\n            <Card.Title>Neue Buchung</Card.Title>\r\n            <Card.Text>\r\n\r\n              Some quick example text to build on the card title and make up the bulk of\r\n              the card's content. Test.\r\n            </Card.Text>\r\n\r\n            <Button variant=\"primary\" onClick={() => history.push('/findSlot')}>Find a Slot!</Button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src={paper} />\r\n          <Card.Body>\r\n            <Card.Title>Bestehende Buchung löschen</Card.Title>\r\n            <Card.Text>\r\n              Sie haben ihre Pläne verworfen und möchten eine bereits getätigte Buchung löschen? Dann folgen Sie diesem Button.\r\n        </Card.Text>\r\n            <Button variant=\"primary\" onClick={() => history.push('/cancle')}>Go To Cancle Booking</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n\r\n    <hr2>\r\n\r\n       Tel: +49931/652781 <br/>\r\n       E-Mail: bade.meister@swimmingmail.com <br/>\r\n       Adresse: Wasserstraße 12\r\n\r\n    </hr2>\r\n\r\n  </div>\r\n)\r\n\r\nexport default StartPage;","import React from 'react';\r\n\r\nconst CanclePage = () => (\r\n    <React.Fragment>\r\n    <h1>Cancle Page!</h1>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default CanclePage;","import React, { useState,useEffect, Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport history from './../history';\r\n\r\nexport default class FindSlortPage extends Component{\r\n    state = {\r\n        date: new Date(),\r\n        booking: new Date(),\r\n        timeslots: new Array(),\r\n        bookings: new Array(),\r\n      }\r\n     \r\n      onChange = (date) => {\r\n          this.setState({ date });\r\n          console.log(\"state\", date);\r\n          console.log(\"state date\",this.state.date);\r\n          console.log(\"state boooking\",this.state.bookings);\r\n          //fetch Available slots for day\r\n          this.fetchBookings();\r\n          this.fetchTimeslots();\r\n\r\n      }\r\n      fetchBookings = async () => {\r\n          console.log(\"start fetch data\");\r\n        const result = await fetch (`/bookings`);\r\n        const body = await result.json();\r\n        this.setState({bookings: body});\r\n        console.log(result);\r\n        console.log(body);\r\n    }\r\n    fetchTimeslots = async () => {\r\n        console.log(\"start fetch data\");\r\n      const result = await fetch (`/timeslots`); //timeslots is not existant jet\r\n      const body = await result.json();\r\n      this.setState({timeslots: body});\r\n      console.log(result);\r\n      console.log(body);\r\n    }\r\n\r\n    onClickNext = () =>{\r\n        //test if booking has capacity\r\n        console.log(this)\r\n        history.push({ pathname:'/dataForm', data: this.state.booking});\r\n        \r\n    }\r\n\r\n    renderTableData=() =>{\r\n        return this.state.timeslots.map((timeslot, index) => {\r\n           const { id, start, end, capacity, bookings } = timeslot //destructuring\r\n           console.log(timeslot)\r\n           if (bookings != undefined){\r\n           console.log(bookings);\r\n           const free = 10;//capacity - bookings.length;\r\n           return (\r\n              <tr key={id}>\r\n                 <td>{start}</td>\r\n                 <td>{end}</td>\r\n                 <td>{capacity}</td>\r\n                 <td>{free}</td>\r\n              </tr>\r\n           )\r\n           }else{\r\n\r\n           }\r\n        })\r\n     }\r\n     \r\n      render() {\r\n        return (\r\n            <React.Fragment>\r\n            <h1>Find Slot Page!</h1>\r\n            <div className=\"wrapFind\">\r\n            <div className=\"findDay\">\r\n                <Calendar  \r\n                    onChange={this.onChange}\r\n                    value={this.state.date}/>\r\n            </div>\r\n            <div className=\"findTime\">\r\n            <h1>Find Slot on {this.state.date.toLocaleDateString()}</h1>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>Start</th>\r\n                    <th>End</th>\r\n                    <th>Capacity</th>\r\n                    <th>Bookings</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.renderTableData()}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n            <Button variant=\"primary\" onClick={()=>this.onClickNext()}>Next</Button>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n      }\r\n}\r\n\r\n/*const FindSlotPage = () => {\r\n    this.state = {\r\n        date: new Date(),\r\n      }\r\n    \r\n    this.onChange = date => this.setState({ date })\r\n    return(<React.Fragment>\r\n        <h1>Find Slot Page!</h1>\r\n        <div class=\"calendar\">\r\n            <Calendar  \r\n                onChange={this.onChange}\r\n                value={this.state.date}/>\r\n        </div>\r\n        </React.Fragment>)\r\n    \r\n    }*/\r\n//export default FindSlotPage;","import React, { useState, useEffect, Component } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport history from './../history';\r\nimport { Form, FormRow, Col, FormLabel, FormGrid, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nexport default class DataFormPage extends Component {\r\n    state = {\r\n        bookingCode: new String(),\r\n        dataPrivacyChecked: new Boolean(false),\r\n    }\r\n\r\n    onClickNext = () => {\r\n         //validate form    (todo)\r\n         if (!this.check()){\r\n            return;\r\n         }\r\n         \r\n         //test if capacity is available (todo)\r\n         this.bookSlot();\r\n       \r\n         // Route to next page\r\n        history.push({ pathname: '/bookingCode', data: this.state.bookingCode });\r\n\r\n    }\r\n\r\n    check () {\r\n        if(!document.getElementById(\"Vorname\").value) {\r\n            alert(\"Bitte geben Sie einen Vornamen ein.\");\r\n            return false; \r\n        }\r\n\r\n        var checkbox = document.getElementById(\"chkddl\"); \r\n        if(!checkbox.checked){\r\n            alert(\"Bitte willigen Sie der Datenverarbeitung ein.\");\r\n            return false;\r\n        }\r\n\r\n        return true; \r\n\r\n    }\r\n\r\n    bookSlot() {\r\n        //book slot with Form data\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n                    <div className=\"Header\">\r\n                        Bitte helfen Sie mit, und geben Sie ihre Kontaktdaten an.\r\n                    </div>\r\n                   \r\n                    <div className=\"textboxes\">\r\n\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group  as={Col} controlId=\"Vorname\">\r\n                                        <Form.Control type=\"Vorname\" placeholder=\"Vorname\" />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"Nachname\">\r\n                                        <Form.Control type=\"Nachname\" placeholder=\"Nachname\" />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}  controlId=\"Straße\">\r\n                                    <Form.Control type=\"Straße\" placeholder=\"Straße\" />\r\n                                </Form.Group>\r\n                                <Form.Group  as={Col}  controlId=\"Hausnummer\">\r\n                                    <Form.Control type=\"Hausnummer\" placeholder=\"Hausnummer\" />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"PLZ\">\r\n                                <Form.Control type=\"postal-code\" placeholder=\"PLZ\" />\r\n                            </Form.Group>\r\n            \r\n                            <Form.Group controlId=\"Ort\">\r\n                                <Form.Control type=\"Ort\" placeholder=\"Ort\" />\r\n                            </Form.Group>\r\n                    \r\n                            <Form.Group controlId=\"Email\">\r\n                                <Form.Control type=\"E-mail\" placeholder=\"E-mail\" />\r\n                            </Form.Group>\r\n                        \r\n                            <Form.Group controlId=\"Telefon\">\r\n                                <Form.Control type=\"Telefonnummer\" placeholder=\"Telefonnummer\" />\r\n                            </Form.Group>\r\n                    \r\n                            <Form.Group controlId=\"BasicCheckbox\">\r\n                                <Form.Check type=\"checkbox\" label=\"Hiermit willige ich in die Datenverarbeitung ein\" id = \"chkddl\" />\r\n                                <Form.Label visible=\"false\" >sth</Form.Label>\r\n                            </Form.Group>\r\n                                                  \r\n                        </Form>\r\n                        </div>\r\n\r\n                <Button type=\"submit\" variant=\"success\" size=\"lg\" id=\"DDL\" onClick={() => this.onClickNext()}>\r\n                    Buchen\r\n                </Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nconst BookingCodePage = () => (\r\n    <h1>BookingCode</h1>\r\n);\r\n\r\nexport default BookingCodePage;","import React from 'react';\r\n\r\nconst HomePage = () => (\r\n    <React.Fragment>\r\n    <h1>Hello World!</h1>\r\n    <p>Test Auto Deploy 2</p>\r\n    <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n        incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n        exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n        anim id est laborum.\r\n    </p>\r\n    <p>\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n    incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n    dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n    anim id est laborum.\r\n    </p>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\n\r\nconst AboutPage = ({match}) => {\r\n    const id = match.params.id;\r\n    //const [petInfo,setPetInfo] = useState({pets:[]});\r\n    let listItems = [];\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            const result = await fetch (`/testdb`);\r\n            const body = await result.json();\r\n            console.log(result);\r\n            console.log(body);\r\n            //setPetInfo(body);\r\n            listItems = body.map((info)=> <li>Name {info.name}</li>);\r\n        }\r\n        fetchData();\r\n    },[id]); \r\n    //console.log(petInfo);\r\n    //const listItems = petInfo.map((info)=> <li>Name {info.Name}</li>);\r\n    //<ul>{listItems}</ul>\r\n    return(\r\n        <>\r\n        <h1>Pets test url param {id}</h1>\r\n        <ul>{listItems}</ul>\r\n        </>\r\n    );\r\n       \r\n};\r\n    \r\n/*useEffect(()=>{\r\n    const fetchData = async () => {\r\n        const result = await fetch ('http://localhost:8000/testdb');\r\n        console.log(result);\r\n    }\r\n    fetchData();\r\n},[name]);*/\r\n\r\n\r\n\r\n\r\n/*\r\nconst ArticlePage = ({match})=> {\r\n    fetch('/api/articles/...',{\r\n        method: 'POST',\r\n        body:\r\n    })\r\n}*/\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nconst AdminLogIn = () => (\r\n    <React.Fragment>\r\n    <h1>Admin LogIn!</h1>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default AdminLogIn;","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport StartPage from './pages/StartPage';\r\nimport CanclePage from './pages/CanclePage';\r\nimport FindSlotPage from './pages/FindSlotPage';\r\nimport DataFormPage from './pages/DataFormPage';\r\nimport BookingCodePage from './pages/BookingCodePage';\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/About';\r\nimport AdminLogIn from './pages/admin/AdminLogIn';\r\nimport history from './history';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={StartPage} />\r\n                    <Route path=\"/cancle\" component={CanclePage} />\r\n                    <Route path=\"/findSlot\" component={FindSlotPage} />\r\n                    <Route path=\"/dataForm\" component={DataFormPage} />\r\n                    <Route path=\"/bookingCode\" component={BookingCodePage} />\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route path=\"/about\" component={AboutPage} />\r\n                    <Route path=\"/admin\" component={AdminLogIn} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}