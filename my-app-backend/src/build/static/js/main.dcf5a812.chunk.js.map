{"version":3,"sources":["images/swimmer.jpg","images/bin.png","images/logo.svg","history.js","pages/StartPage.js","pages/CanclePage.js","pages/FindSlotPage.js","pages/DataFormPage.js","pages/BookingCodePage.js","pages/HomePage.js","pages/About.js","pages/admin/AdminLogIn.js","pages/admin/AdminNavigation.js","pages/admin/AdminStart.js","pages/admin/AdminTimeslotView.js","pages/admin/AdminCheckQR.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","StartPage","class","Form","Row","Group","as","Col","controlId","id","src","width","height","CardDeck","Card","Img","variant","swimmer","Body","Title","Text","Button","onClick","push","bin","CanclePage","Fragment","FindSlortPage","props","state","date","Date","timeslots","Array","bookings","onChange","setState","console","log","fetchTimeslots","a","fetch","result","json","body","fetchTimeslotsPerDay","onClickTableRow","event","timeslotID","target","pathname","data","renderTableData","map","timeslot","index","start","end","capacity","startTime","booking","toLocaleTimeString","hour","minute","endTime","free","key","Event","className","this","value","toLocaleDateString","Table","responsive","hover","Component","DataFormPage","bookingCode","String","dataPrivacyChecked","Boolean","onClickNext","check","document","getElementsByClassName","style","display","bookSlot","getElementById","isNaN","checked","Control","type","placeholder","custom","Check","label","Label","visible","size","BookingCodePage","location","bgColor","fgColor","level","includeMargin","renderAs","imageSettings","x","y","excavate","HomePage","AboutPage","match","params","listItems","useEffect","info","name","fetchData","AdminLogIn","AdminNavigation","to","AdminStart","AdminTimeslotView","AdminCheckQR","Routes","path","exact","component","FindSlotPage","App","window","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dcf5a812.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/swimmer.d42d3da9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bin.82f6028c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React, { Component } from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardColumns from 'react-bootstrap/CardColumns';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { Form, FormRow, Col, FormLabel, FormGrid, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\n\r\nimport history from './../history';\r\nimport logo from './../images/logo.svg';\r\nimport swimmer from './../images/swimmer.jpg';\r\nimport bin from './../images/bin.png';\r\n\r\n\r\nconst StartPage = () => (\r\n\r\n  <div class=\"CardDeckComponent\">\r\n    <Form.Row>\r\n      <Form.Group as={Col} controlId=\"lögö\" id=\"lögö\">\r\n        <img src=\"./../H20_Logo3.jpg\" id= \"logo\" width=\"100\" height=\"80\"/>\r\n      </Form.Group>\r\n      <Form.Group as={Col} controlId=\"streks\" id=\"streks\">\r\n        <h1 id=\"StartHeader\">Willkommen!</h1>\r\n    </Form.Group>\r\n    </Form.Row>\r\n    <div class=\"SubHeader\">\r\n      Bitte wählen Sie eine Option, mit der Sie fortfahren möchten\r\n    </div>\r\n    <hr class=\"solid\"></hr>\r\n\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src={swimmer} />\r\n          <Card.Body>\r\n            <Card.Title>Neue Buchung</Card.Title>\r\n            <Card.Text>\r\n\r\n              Wenn Sie eine neue Buchung für das Schwimmbad tätigen möchten, klicken Sie auf den unten stehenden Button. \r\n              \r\n            </Card.Text>\r\n\r\n            <Button variant=\"primary\" onClick={() => history.push('/findSlot')}>Jetzt Platz buchen!</Button>\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src={bin} />\r\n          <Card.Body>\r\n            <Card.Title>Bestehende Buchung löschen</Card.Title>\r\n            <Card.Text>\r\n              Sie haben ihre Pläne verworfen und möchten eine bereits getätigte Buchung löschen? Dann folgen Sie diesem Button.\r\n        </Card.Text>\r\n            <Button variant=\"primary\" onClick={() => history.push('/cancle')}>Buchung löschen</Button>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardDeck>\r\n\r\n    <hr2 id=\"impressum\">\r\n      Impressum: <br/>\r\n       Tel: +49931/652781 <br/>\r\n       E-Mail: bade.meister@swimmingmail.com <br/>\r\n       Adresse: Wasserstraße 12\r\n\r\n    </hr2>\r\n\r\n  </div>\r\n)\r\n\r\nexport default StartPage;","import React from 'react';\r\n\r\nconst CanclePage = () => (\r\n    <React.Fragment>\r\n    <h1>Cancle Page!</h1>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default CanclePage;","import React, { useState, useEffect, Component } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\nimport history from './../history';\r\n\r\n/*\r\n* get: nothing from StartPage,\r\n* send: selected Timeslot ID to DataFormPage,\r\n*/\r\n\r\n/*\r\n* Functionality: \r\n* - select date\r\n* - show Timeslots in Table\r\n* - Go to next page and send selected TimeslotID to next page\r\n* - format Time in Table\r\n* To-Do: \r\n* - CSS/Style -> I hate CSS \r\n* - FetchTimeslots for given date -> wait for Dustin\r\n* - Only Display Timeslot if there is still capacity available -> wait for Dustin\r\n* - Display Error Text if everything is booked -> wait for Dustin \r\n* - check capcity -> wait for Dustin\r\n* - Refactor Code (last to do)\r\n*/\r\n\r\nexport default class FindSlortPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //fetch data for today\r\n        const today = new Date();\r\n        //this.fetchBookings();\r\n        this.fetchTimeslots();\r\n        //this.fetchTimeslotsPerDay(today);\r\n\r\n    }\r\n    state = {\r\n        date: new Date(),\r\n        timeslots: new Array(),\r\n        bookings: new Array(),\r\n    }\r\n\r\n    onChange = (date) => {\r\n        this.setState({ date });\r\n        console.log(\"state\", date);\r\n        console.log(\"state date\", this.state.date);\r\n        //fetch Available slots for day\r\n        //this.fetchBookings();\r\n        this.fetchTimeslots();\r\n    }\r\n    /*not necessary\r\n    fetchBookings = async () => {\r\n        console.log(\"start fetch booking data\");\r\n      const result = await fetch (`/bookings`);\r\n      const body = await result.json();\r\n      this.setState({bookings: body});\r\n      console.log(\"bookings\",body);\r\n}*/\r\n    fetchTimeslots = async () => {\r\n        console.log(\"start fetch timeslot data\");\r\n        const result = await fetch(`/timeslots`); //timeslots is not existant jet\r\n        const body = await result.json();\r\n        this.setState({ timeslots: body });\r\n        console.log(\"state\", this.state.timeslots)\r\n        //$filter=StartDate ge datetime'2014-01-01T00%3a00%3a00'\r\n    }\r\n\r\n    fetchTimeslotsPerDay = async (date) => {\r\n        console.log(\"start fetch timeslot data per day\");\r\n        const result = await fetch(`/timeslots$filter=start ge datetime'2020-11-06'`); //timeslots is not existant jet\r\n        const body = await result.json();\r\n        this.setState({ timeslots: body });\r\n        console.log(\"state\", this.state.timeslots)\r\n        //$filter=StartDate ge datetime'2014-01-01T00%3a00%3a00'\r\n    }\r\n\r\n    onClickTableRow = (event) => {\r\n        const timeslotID = event.target.id;\r\n        console.log(\"Timeslot ID\", timeslotID);\r\n        history.push({ pathname: '/dataForm', data: timeslotID });\r\n    }\r\n    /*\r\n    onClickNext = () => {\r\n        //test if booking has capacity\r\n        console.log(this)\r\n        history.push({ pathname: '/dataForm', data: this.state.booking });\r\n\r\n    }*/\r\n\r\n    renderTableData = () => {\r\n        console.log(\"renderTableData\");\r\n        return this.state.timeslots.map((timeslot, index) => {\r\n            const { id, start, end, capacity, booking } = timeslot //destructuring\r\n            var startDate = new Date(start);\r\n            var startTime = startDate.toLocaleTimeString('de-DE', {hour: '2-digit', minute:'2-digit'});\r\n            var endDate = new Date(end);\r\n            var endTime = endDate.toLocaleTimeString('de-DE', {hour: '2-digit', minute:'2-digit'});\r\n            //return only if booking is possible. \r\n            //else return \"An diesem Tag ist alles ausgebucht\" oder sowas in der Art \r\n            const free = capacity;// - booking.length;\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{startTime}</td>\r\n                    <td>{endTime}</td>\r\n                    <td>{capacity}</td>\r\n                    <td>{free}</td>\r\n                    <td><Button id={id} onClick={(Event) => this.onClickTableRow(Event)}>Buchen</Button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1 className=\"Header\">Wählen Sie einen Timeslot!</h1>\r\n                <div className=\"wrapFind\">\r\n                    <div className=\"findDay\">\r\n                        <Calendar\r\n                            onChange={this.onChange}\r\n                            value={this.state.date} />\r\n                    </div>\r\n                    <div className=\"findTime\">\r\n                        <h1>Finden Sie einen Timeslot am {this.state.date.toLocaleDateString('de-DE')}</h1>\r\n                        <Table responsive hover variant=\"dark\" id=\"timeslotTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Start</th>\r\n                                    <th>End</th>\r\n                                    <th>Capacity</th>\r\n                                    <th>Bookings</th>\r\n                                    <th>Buchen</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderTableData()}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n//<Button variant=\"primary\" onClick={()=>this.onClickNext()}>Next</Button>\r\n","import React, { useState, useEffect, Component } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport history from './../history';\r\nimport { Form, FormRow, Col, FormLabel, FormGrid, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nexport default class DataFormPage extends Component {\r\n    state = {\r\n        bookingCode: new String(),\r\n        dataPrivacyChecked: new Boolean(false),\r\n    }\r\n\r\n    onClickNext = () => {\r\n        //validate form    (todo)\r\n        if (this.check() == 1) {\r\n            document.getElementsByClassName('ErrorVorname')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorVorname')[0].style.display = 'none';\r\n        if (this.check() == 2){\r\n            document.getElementsByClassName('ErrorNachname')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorNachname')[0].style.display = 'none';\r\n        if (this.check() == 3){\r\n            document.getElementsByClassName('ErrorStraße')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorStraße')[0].style.display = 'none';\r\n        if (this.check() == 4){\r\n            document.getElementsByClassName('ErrorHausnummer')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorHausnummer')[0].style.display = 'none';\r\n        if (this.check() == 5){\r\n            document.getElementsByClassName('ErrorPLZ')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorPLZ')[0].style.display = 'none';\r\n        if (this.check() == 6){\r\n            document.getElementsByClassName('ErrorOrt')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorOrt')[0].style.display = 'none';\r\n        if (this.check() == 7){\r\n            document.getElementsByClassName('ErrorEmail')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorEmail')[0].style.display = 'none';\r\n        if (this.check() == 8){\r\n            document.getElementsByClassName('ErrorTelefon')[0].style.display = 'block';\r\n            return false; \r\n        }\r\n\r\n        document.getElementsByClassName('ErrorTelefon')[0].style.display = 'none';\r\n        if (this.check() == 9){\r\n            document.getElementsByClassName('ErrorCheckbox')[0].style.display = 'block';\r\n            return false; \r\n\r\n        }\r\n        document.getElementsByClassName('ErrorCheckbox')[0].style.display = 'none';\r\n        if(this.check() == 10) {\r\n            history.push({ pathname: '/bookingCode', data: this.state.bookingCode });\r\n        }\r\n\r\n\r\n\r\n        //test if capacity is available (todo)\r\n        this.bookSlot();\r\n\r\n        // Route to next page\r\n        history.push({ pathname: '/bookingCode', data: this.state.bookingCode });\r\n\r\n    }\r\n\r\n    check() {\r\n\r\n\r\n        if (!document.getElementById(\"Vorname\").value || !isNaN(document.getElementById(\"Vorname\").value)) {\r\n            return 1;\r\n        }\r\n\r\n        if (!document.getElementById(\"Nachname\").value || !isNaN(document.getElementById(\"Nachname\").value)) {\r\n            return 2;\r\n        }\r\n\r\n        if (!document.getElementById(\"Straße\").value || !isNaN(document.getElementById(\"Straße\").value)) {\r\n            return 3;\r\n        }\r\n\r\n        if (!document.getElementById(\"Hausnummer\").value || isNaN(document.getElementById(\"Hausnummer\").value)) {\r\n            return 4;\r\n        }\r\n\r\n        if (!document.getElementById(\"PLZ\").value || isNaN(document.getElementById(\"PLZ\").value)) {\r\n            return 5;\r\n        }\r\n\r\n        if (!document.getElementById(\"Ort\").value || !isNaN(document.getElementById(\"Ort\").value)) {\r\n            return 6;\r\n        }\r\n\r\n        if (!document.getElementById(\"Email\").value || !isNaN(document.getElementById(\"Email\").value)) {\r\n            return 7;\r\n        }\r\n\r\n        if (!document.getElementById(\"Telefonnummer\").value || isNaN(document.getElementById(\"Telefonnummer\").value)) {\r\n            return 8;\r\n        }\r\n\r\n        var checkbox = document.getElementById(\"chkddl\");\r\n        if (!checkbox.checked) { \r\n            return 9;\r\n        }\r\n        return 10;\r\n    }\r\n\r\n    bookSlot() {\r\n        //book slot with Form data\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n                <div className=\"Header_DataForm\">\r\n                    Bitte helfen Sie mit, und geben Sie ihre Kontaktdaten an.\r\n                    </div>\r\n\r\n                <div className=\"textboxes\">\r\n\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"Vorname\">\r\n                                <Form.Control type=\"Vorname\" placeholder=\"Vorname\" />                       \r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"Nachname\">\r\n                                <Form.Control type=\"Nachname\" placeholder=\"Nachname\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"Straße\" width=\"650\">\r\n                                <Form.Control type=\"Straße\" placeholder=\"Straße\" />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"Hausnummer\">\r\n                                <Form.Control type=\"Hausnummer\" placeholder=\"Hausnummer\" width=\"150\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"PLZ\">\r\n                            <Form.Control type=\"postal-code\" placeholder=\"PLZ\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Ort\">\r\n                            <Form.Control type=\"Ort\" placeholder=\"Ort\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Email\">\r\n                            <Form.Control type=\"E-mail\" placeholder=\"E-mail\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"Telefon\">\r\n                                <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n                                    <Form.Control as=\"select\" custom>\r\n                                        <option>+49</option>\r\n                                        <option>+43</option>\r\n                                        <option>+41</option>\r\n                                        <option>+31</option>\r\n                                        <option>+32</option>\r\n                                        <option>+39</option>\r\n                                        <option>+1</option>\r\n                                        <option>+44</option>\r\n                                        <option>+48</option>\r\n                                        <option>+420</option>\r\n                                        <option>+45</option>\r\n                                        <option>+46</option>\r\n                                        <option>+47</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Control id=\"Telefonnummer\" type=\"Telefonnummer\" placeholder=\"Telefonnummer\" />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    <div class = \"Errors\">\r\n                        <div className = \"ErrorVorname\" style = {{display: \"none\"}}>Bitte geben Sie einen gültigen Vornamen ein.</div>\r\n                        <div class = \"ErrorNachname\" style = {{display: \"none\"}}>Bitte geben Sie einen gültigen Nachnamen ein.</div>\r\n                        <div class = \"ErrorStraße\" style = {{display: \"none\"}}>Bitte geben Sie eine Straße ein.</div>\r\n                        <div class = \"ErrorHausnummer\" style = {{display: \"none\"}}>Bitte geben Sie eine gültige Hausnummer ein.</div>\r\n                        <div class = \"ErrorPLZ\" style = {{display: \"none\"}}>Bitte geben Sie eine gültige Postleitzahl ein.</div>\r\n                        <div class = \"ErrorOrt\" style = {{display: \"none\"}}>Bitte geben Sie einen gültigen Ort ein.</div>\r\n                        <div class = \"ErrorTelefon\" style = {{display: \"none\"}}>Bitte geben Sie eine gültige Telefonnummer ein.</div>\r\n                        <div class = \"ErrorEmail\" style = {{display: \"none\"}}>Bitte geben Sie eine gültige E-mail ein.</div>\r\n                        <div class = \"ErrorCheckbox\" style = {{display: \"none\"}}>Bitte stimmen Sie der Datenverarbeitung zu.</div>\r\n                    </div>\r\n\r\n                        <Form.Group controlId=\"BasicCheckbox\" id=\"Checkbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Hiermit willige ich in die Datenverarbeitung ein\" id=\"chkddl\" />\r\n                            <Form.Label visible=\"false\" ></Form.Label>\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                </div>\r\n\r\n                <Button type=\"submit\" variant=\"success\" size=\"lg\" id=\"DDL\" onClick={() => this.onClickNext()}>\r\n                    Buchen\r\n                </Button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport QRCode from 'qrcode.react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport history from './../history';\r\n\r\nexport default class BookingCodePage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        console.log(this.props.location.data);\r\n    }\r\n    \r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    getDetails() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Booking Code Page!</h1>\r\n\r\n                <div className=\"textboxes\">\r\n\r\n                    <QRCode\r\n                        value={\"http://picturesofpeoplescanningqrcodes.tumblr.com/\"}\r\n                        size={128}\r\n                        bgColor={\"#ffffff\"}\r\n                        fgColor={\"#000000\"}\r\n                        level={\"L\"}\r\n                        includeMargin={false}\r\n                        renderAs={\"svg\"}\r\n                        imageSettings={{\r\n                            src: \"https://static.zpao.com/favicon.png\",\r\n                            x: null,\r\n                            y: null,\r\n                            height: 24,\r\n                            width: 24,\r\n                            excavate: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Button variant=\"primary\" onClick={() => history.push({ pathname: '/' })}>Home</Button>\r\n\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nconst HomePage = () => (\r\n    <React.Fragment>\r\n    <h1>Hello World!</h1>\r\n    <p>Test Auto Deploy 2</p>\r\n    <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n        incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n        exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n        dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n        anim id est laborum.\r\n    </p>\r\n    <p>\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor \r\n    incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \r\n    exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure \r\n    dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. \r\n    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit \r\n    anim id est laborum.\r\n    </p>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default HomePage;","import React, { useState, useEffect } from 'react';\r\n\r\nconst AboutPage = ({match}) => {\r\n    const id = match.params.id;\r\n    //const [petInfo,setPetInfo] = useState({pets:[]});\r\n    let listItems = [];\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            const result = await fetch (`/testdb`);\r\n            const body = await result.json();\r\n            console.log(result);\r\n            console.log(body);\r\n            //setPetInfo(body);\r\n            listItems = body.map((info)=> <li>Name {info.name}</li>);\r\n        }\r\n        fetchData();\r\n    },[id]); \r\n    //console.log(petInfo);\r\n    //const listItems = petInfo.map((info)=> <li>Name {info.Name}</li>);\r\n    //<ul>{listItems}</ul>\r\n    return(\r\n        <>\r\n        <h1>Pets test url param {id}</h1>\r\n        <ul>{listItems}</ul>\r\n        </>\r\n    );\r\n       \r\n};\r\n    \r\n/*useEffect(()=>{\r\n    const fetchData = async () => {\r\n        const result = await fetch ('http://localhost:8000/testdb');\r\n        console.log(result);\r\n    }\r\n    fetchData();\r\n},[name]);*/\r\n\r\n\r\n\r\n\r\n/*\r\nconst ArticlePage = ({match})=> {\r\n    fetch('/api/articles/...',{\r\n        method: 'POST',\r\n        body:\r\n    })\r\n}*/\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport history from './../../history';\r\n\r\nconst AdminLogIn = () => (\r\n\r\n    <React.Fragment>\r\n    <h1>Admin LogIn!</h1>\r\n    <Button variant=\"primary\" onClick={()=>history.push({ pathname: '/admin/start'})}>Next</Button>\r\n    </React.Fragment>\r\n\r\n);\r\n\r\nexport default AdminLogIn;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminNavigation = () => (\r\n    <React.Fragment>\r\n        <h1>Admin Navigation!</h1>\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/admin/start\">Start</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/admin/timeslots\">Timeslots</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/admin/checkQR\">CheckQR</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default AdminNavigation;","import React from 'react';\r\nimport AdminNavigation from './AdminNavigation';\r\n\r\n\r\n\r\nconst AdminStart = () => (\r\n    <React.Fragment>\r\n        <AdminNavigation></AdminNavigation>\r\n    <h1>Admin Start Page!</h1>\r\n\r\n    </React.Fragment>\r\n)\r\n\r\nexport default AdminStart;","import React from 'react';\r\nimport AdminNavigation from './AdminNavigation';\r\n\r\nconst AdminTimeslotView = () => (\r\n    <React.Fragment>\r\n         <AdminNavigation></AdminNavigation>\r\n    <h1>Admin Timeslot Page!</h1>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default AdminTimeslotView;","import React from 'react';\r\nimport AdminNavigation from './AdminNavigation';\r\n\r\nconst AdminCheckQR = () => (\r\n    <React.Fragment>\r\n         <AdminNavigation></AdminNavigation>\r\n    <h1>Admin Check QR Code Page!</h1>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default AdminCheckQR;","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport StartPage from './pages/StartPage';\r\nimport CanclePage from './pages/CanclePage';\r\nimport FindSlotPage from './pages/FindSlotPage';\r\nimport DataFormPage from './pages/DataFormPage';\r\nimport BookingCodePage from './pages/BookingCodePage';\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/About';\r\nimport AdminLogIn from './pages/admin/AdminLogIn';\r\nimport AdminStart from './pages/admin/AdminStart';\r\nimport AdminTimeslotView from './pages/admin/AdminTimeslotView';\r\nimport AdminCheckQR from './pages/admin/AdminCheckQR';\r\nimport history from './history';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={StartPage} />\r\n                    <Route path=\"/cancle\" component={CanclePage} />\r\n                    <Route path=\"/findSlot\" component={FindSlotPage} />\r\n                    <Route path=\"/dataForm\" component={DataFormPage} />\r\n                    <Route path=\"/bookingCode\" component={BookingCodePage} />\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route path=\"/about\" component={AboutPage} />\r\n                    <Route path=\"/admin\" exact component={AdminLogIn} />\r\n                    <Route path=\"/admin/start\" component={AdminStart} />\r\n                    <Route path=\"/admin/timeslots\" component={AdminTimeslotView} />\r\n                    <Route path=\"/admin/checkQR\" component={AdminCheckQR} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Routes from './Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}